#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define NUM     5
#define VIM     6

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

// / {
//     combos {
//         compatible = "zmk,combos";
//         combo_undo {
//             timeout-ms = <50>;
//             key-positions = <26 27>;
//             bindings = <&kp LC(Z)>;
//         };
//         combo_q {
//             timeout-ms = <50>;
//             key-positions = <27 28>;
//             bindings = <&kp Q>;
//         };
//         combo_semicolon {
//             timeout-ms = <50>;
//             key-positions = <33 34>;
//             bindings = <&kp SEMI>;
//         };
//     };
// };

// keys to add
// ctrl f, ctrl a, cmd l, ctrl w, ctr r

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
    &kp ESC     &kp N1      &kp N2      &kp N3      &kp N4        &kp N5       &kp LT                                       &kp GT          &kp N6         &kp N7        &kp N8        &kp N9      &kp N0         &kp BSPC
    &kp LSHFT   &kp Q       &kp W       &kp E       &kp R         &kp T        &kp LBRC                                     &kp RBRC        &lt SYM Y      &kp U         &lt VIM I     &kp O       &kp P          &kp RSHFT       
    &kp TAB     &lt FUNC A  &lt SYM S   &lt NUM D   &lt NAV F     &lt MEDIA G  &kp LBKT                                     &kp RBKT        &lt NUM H      &lt SYM J     &lt FUNC K    &lt MEDIA L &hm RCTL SEMI  &kp TAB
    &kp GRAVE   &kp Z       &kp X       &kp C       &lt VIM V     &kp B        &kp MINUS                                    &kp RCTRL       &lt NAV N      &kp M         &kp COMMA     &kp DOT     &kp FSLH       &kp RET
                            &kp TILDE   &kp LCTL    &kp LALT      &kp LGUI     &kp LSHFT       &trans        &trans         &kp RSHFT       &kp SPACE      &kp RCTRL     &kp RALT      &kp ESC
                >;
            };

            nav_layer {
                label = "Navigation";
                
                bindings = <
    &trans     &trans       &trans       &trans        &trans             &trans         &trans                                  &trans         &trans            &trans            &trans             &trans      &trans           &trans
    &trans     &kp HOME     &kp UP       &kp END       &trans             &kp LG(T)      &trans                                  &trans         &trans            &trans            &kp UP             &kp PLUS    &kp HOME         &trans 
    &trans     &kp LEFT     &kp DOWN     &kp RIGHT     &kp LG(P)          &kp LG(LS(P))  &trans                                  &trans         &kp LC(LS(S))     &kp LEFT          &kp DOWN           &kp RIGHT   &kp END          &trans 
    &trans     &trans       &trans       &trans        &trans             &kp LG(LBKT)   &trans                                  &trans         &kp LG(RBKT)      &trans            &trans             &trans      &trans           &trans
                            &trans       &trans        &kp LC(TAB)        &kp LA(BSLH)   &kp LALT      &trans        &trans      &kp LA(BSLH)   &kp LG(LS(LBKT))  &kp LG(LS(RBKT))  &trans             &trans
            >;
        };

        sym_layer {
            label = "Symbols";

            bindings = <
    &trans     &trans       &trans       &trans          &trans           &trans        &trans                                  &trans         &trans        &trans            &trans        &trans      &trans      &trans
    &trans     &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT     &trans                                  &trans         &kp CARET     &kp AMPS          &kp ASTRK     &kp UNDER   &kp EQUAL   &trans
    &trans     &kp MINUS    &kp LBKT     &kp LBRC        &kp LPAR         &kp SQT       &trans                                  &trans         &kp GRAVE     &kp RPAR          &kp RBRC      &kp RBKT    &kp PLUS    &trans
    &trans     &kp CAPS     &kp GRAVE    &kp LC(LS(TAB)) &kp LC(LG(LEFT)) &caps_word    &trans                                  &trans         &kp BSLH      &kp MINUS         &trans        &kp QMARK   &kp BSLH    &trans
                            &trans       &trans          &kp FSLH         &kp QMARK     &kp DEL      &trans        &trans       &kp MINUS      &kp SQT       &kp DQT           &trans        &trans
            >;
        };

        func_layer {
            label = "Function";

            bindings = <
    &trans     &trans       &trans        &trans       &trans        &trans        &trans                                  &trans        &trans           &trans         &trans             &trans          &trans      &trans
    &trans     &trans       &kp LC(W)     &kp LC(E)    &kp LC(R)     &kp LC(GRAVE) &trans                                  &trans        &kp C_PLAY_PAUSE &kp LG(Z)      &kp F5             &kp F9          &kp F10     &trans
    &trans     &kp LC(A)    &kp LG(S)     &kp LALT     &kp LG(F)     &kp LS(END)   &trans                                  &trans        &kp K_VOL_UP     &kp LA(TAB)    &kp LA(LS(TAB))    &kp LG(L)       &kp F11     &trans
    &trans     &kp LG(Z)    &kp LG(X)     &kp LG(C)    &kp LG(V)     &kp C_MUTE    &trans                                  &trans        &kp K_VOL_DN     &kp LSHFT      &trans             &kp F3          &kp F12     &trans
                            &trans        &trans       &kp LC(C)     &kp LA(BSLH)  &trans      &trans        &trans        &kp LC(GRAVE) &kp LA(BSLH)     &kp LC(R)      &kp LC(LS(GRAVE))  &trans

            >;
        };

        media_layer {
            label = "Media";

            bindings = <

    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans         &trans             &trans         &trans         &trans            &trans
    &trans     &bootloader &trans      &trans      &trans      &trans        &trans                                  &trans          &trans         &kp C_BRI_DEC      &kp C_SNAPSHOT &kp C_BRI_INC  &trans            &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &kp K_VOL_UP   &kp K_PREV         &trans         &kp K_NEXT     &trans            &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &kp K_VOL_DN   &kp C_MUTE         &trans         &trans         &trans            &trans
                           &trans      &trans      &trans      &trans        &trans      &trans        &trans        &kp LG(LS(H))   &kp LG(LS(M))  &kp C_PLAY_PAUSE   &trans         &trans
            >;
        };

        mouse_layer {
            label = "Numpad";

            bindings = <
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &trans      &trans      &trans      &kp N0         &trans
    &trans     &bootloader &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp N7      &kp N8      &kp N9      &kp PLUS       &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp N4      &kp N5      &kp N6      &kp MINUS      &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp N1      &kp N2      &kp N3      &kp EQUAL      &trans
                           &trans      &trans      &trans      &trans        &trans      &trans        &trans        &kp PERIOD      &kp N0      &kp FSLH    &kp HASH    &trans
            >;
        };

        winnav_layer {
            label = "Vim";

            bindings = <
    &trans     &trans       &trans       &trans       &trans        &trans     &trans                                  &trans             &trans      &trans                    &trans                    &trans                   &trans      &trans
    &trans     &trans       &trans       &kp LC(U)    &kp LS(I)     &kp LS(T)  &trans                                  &trans             &trans      &trans                    &kp LG(LS(UP_ARROW))      &kp LS(O)                &kp LC(P)   &trans
    &trans     &trans       &kp N0       &kp LC(D)    &kp DLLR      &kp LS(G)  &trans                                  &trans             &trans      &kp LG(LS(LEFT_ARROW))    &kp LC(LS(UP_ARROW))      &kp LG(LS(RIGHT_ARROW))  &trans      &trans
    &trans     &trans       &trans       &trans       &kp LC(V)     &trans     &trans                                  &trans             &kp LC(N)   &kp LC(LS(M))                    &trans      &trans        &trans                   &trans
                            &trans       &trans       &kp COLON     &kp ESC    &trans      &trans        &trans        &kp LC(LS(GRAVE))  &kp RSHIFT  &kp ESC                   &trans      &trans
            >;
        };
    };
};
