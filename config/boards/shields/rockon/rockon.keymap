#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define NUM     5
#define WINNAV  6

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

// / {
//     combos {
//         compatible = "zmk,combos";
//         combo_undo {
//             timeout-ms = <50>;
//             key-positions = <26 27>;
//             bindings = <&kp LC(Z)>;
//         };
//         combo_q {
//             timeout-ms = <50>;
//             key-positions = <27 28>;
//             bindings = <&kp Q>;
//         };
//         combo_semicolon {
//             timeout-ms = <50>;
//             key-positions = <33 34>;
//             bindings = <&kp SEMI>;
//         };
//     };
// };

// keys to add
// ctrl f, ctrl a, cmd l, ctrl w, ctr r

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
    &kp ESC     &kp N1      &kp N2      &kp N3      &kp N4        &kp N5       &kp LT                                       &kp GT          &kp N6         &kp N7        &kp N8        &kp N9      &kp N0         &kp BSPC
    &kp LSHFT   &kp Q       &kp W       &kp E       &kp R         &kp T        &kp LBRC                                     &kp RBRC        &kp Y          &kp U         &kp I         &kp O       &kp P          &kp RSHFT
    &kp TAB     &kp A       &lt SYM S   &lt NUM D   &lt NAV F     &lt MEDIA G  &kp LBKT                                     &kp RBKT        &lt NUM H      &lt SYM J     &lt FUNC K    &lt NAV L   &hm RCTL SEMI   &kp TAB
    &kp GRAVE   &kp Z       &kp X       &kp C       &kp V         &kp B        &kp MINUS                                    &kp RCTRL       &kp N          &kp M         &kp COMMA     &kp DOT     &kp FSLH       &kp RET
                            &kp TILDE   &kp LCTL    &kp LALT      &kp LGUI     &kp LSHFT       &trans        &trans         &kp RSHFT       &lt SYM SPACE  &kp RET       &kp RALT      &kp RCTRL
                >;
            };

            nav_layer {
                label = "Navigation";
                
                bindings = <
    &trans     &trans       &trans       &trans      &trans        &trans        &trans                                  &trans         &trans        &trans       &trans         &trans      &trans           &trans
    &trans     &kp HOME     &kp UP       &kp END     &trans        &trans        &trans                                  &trans         &trans        &trans       &kp UP         &kp PLUS    &kp HOME         &trans 
    &trans     &kp LEFT     &kp DOWN     &kp RIGHT   &trans        &trans        &trans                                  &trans         &trans        &kp LEFT     &kp DOWN       &kp RIGHT   &kp END          &trans 
    &trans     &trans       &trans       &trans      &trans        &trans        &trans                                  &trans         &trans        &trans       &trans         &trans      &trans           &trans
                            &trans       &trans      &trans        &trans        &trans       &trans        &trans       &trans         &trans        &trans       &trans         &trans
            >;
        };

        sym_layer {
            label = "Symbols";

            bindings = <
    &trans     &trans       &trans       &trans          &trans           &trans        &kp LS(MINUS)                           &kp LS(PLUS)         &trans        &trans            &trans        &trans      &trans      &trans
    &trans     &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT     &trans                                  &trans         &kp CARET     &kp AMPS          &kp ASTRK     &kp UNDER   &kp EQUAL   &trans
    &trans     &kp MINUS    &kp LBKT     &kp LBRC        &kp LPAR         &kp SQT       &trans                                  &trans         &kp LPAR      &kp RPAR          &kp RBRC      &kp RBKT    &kp PLUS    &trans
    &trans     &kp CAPS     &kp GRAVE    &kp LC(LS(TAB)) &kp LC(LG(LEFT)) &caps_word    &trans                                  &trans         &trans        &kp LC(LG(RIGHT)) &kp LC(TAB)   &trans      &kp BSLH    &trans
                            &trans       &trans          &trans           &kp RET       &kp DEL      &trans        &trans       &kp BSPC       &kp SQT       &kp DQT            &trans        &trans
            >;
        };

        func_layer {
            label = "Function";

            bindings = <
    &trans     &trans       &trans        &trans       &trans        &trans        &trans                                  &trans     &trans           &trans         &trans           &trans          &trans      &trans
    &trans     &trans       &kp LC(W)     &kp LC(E)    &kp LC(R)     &kp LC(GRAVE) &trans                                  &trans     &kp C_PLAY_PAUSE &kp LC(GRAVE)  &kp F8           &kp F9          &kp F10     &trans
    &trans     &kp LC(A)    &kp LC(S)     &trans       &kp LG(F)     &kp LS(END)   &trans                                  &trans     &kp K_VOL_UP     &kp LA(TAB)    &kp LA(LS(TAB))  &kp LG(TAB)     &kp F11     &trans
    &trans     &trans       &kp LG(X)     &kp LG(C)    &kp LG(V)     &kp C_MUTE    &trans                                  &trans     &kp K_VOL_DN     &kp LG(L)      &trans           &kp F3          &kp F12     &trans
                            &trans        &trans       &kp LALT      &kp LA(BSLH)  &trans      &trans        &trans        &trans     &kp LA(BSLH)     &kp LC(R)      &trans           &trans

            >;
        };

        media_layer {
            label = "Media";

            bindings = <

    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &trans             &trans         &trans         &trans            &trans
    &trans     &bootloader &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp C_BRI_DEC      &kp K_VOL_UP   &kp C_BRI_INC  &trans            &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp K_PREV         &kp K_VOL_DN   &kp K_NEXT     &trans            &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp C_MUTE         &trans         &trans         &trans            &trans
                           &trans      &trans      &trans      &trans        &trans      &trans        &trans        &trans          &trans      &kp C_PLAY_PAUSE   &trans         &trans
            >;
        };

        mouse_layer {
            label = "Numpad";

            bindings = <
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &trans      &trans      &trans      &kp N0         &trans
    &trans     &bootloader &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp N7      &kp N8      &kp N9      &kp PLUS       &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp N4      &kp N5      &kp N6      &kp MINUS      &trans
    &trans     &trans      &trans      &trans      &trans      &trans        &trans                                  &trans          &trans      &kp N1      &kp N2      &kp N3      &kp EQUAL      &trans
                           &trans      &trans      &trans      &trans        &trans      &trans        &trans        &trans          &kp ASTRK   &kp FSLH    &kp HASH    &trans
            >;
        };

        winnav_layer {
            label = "Win Navigation";

            bindings = <
    &trans     &trans       &trans       &trans       &trans        &trans        &trans                                  &trans     &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans       &trans       &kp LG(UP)   &trans        &trans        &trans                                  &trans     &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans       &kp LG(LEFT) &kp LG(DOWN) &kp LG(RIGHT) &trans        &trans                                  &trans     &trans      &trans      &trans      &trans      &trans      &trans
    &trans     &trans       &trans       &trans       &trans        &trans        &trans                                  &trans     &trans      &trans      &trans      &trans      &trans      &trans
                            &trans       &trans       &trans        &trans        &trans      &trans        &trans        &trans     &trans      &trans      &trans      &trans
            >;
        };
    };
};
